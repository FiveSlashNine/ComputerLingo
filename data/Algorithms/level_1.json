[
  {
    "id": 1,
    "title": "Level 1: Algorithm Basics",
    "type": "multiple-choice",
    "question": "What is the main purpose of an algorithm?",
    "options": [
      { "id": "a", "text": "To store data" },
      { "id": "b", "text": "To solve a problem step-by-step" },
      { "id": "c", "text": "To design a webpage" },
      { "id": "d", "text": "To display graphics" }
    ],
    "correctAnswer": "b",
    "icon": "Code2"
  },
  {
    "id": 2,
    "title": "Level 1: Algorithm Basics",
    "type": "true-false",
    "question": "An algorithm must always produce the correct output for any valid input.",
    "correctAnswer": true,
    "icon": "SlidersHorizontal"
  },
  {
    "id": 3,
    "title": "Level 1: Algorithm Steps",
    "type": "fill-blanks",
    "question": "Complete the steps of a basic algorithm: 1) Input, 2) Process, 3) ____, 4) End",
    "codeTemplate": "Step 3 is: ____",
    "blanks": ["Output"],
    "icon": "Terminal"
  },
  {
    "id": 4,
    "title": "Level 1: Sorting Algorithm",
    "type": "drag-drop",
    "question": "Arrange the steps of the Bubble Sort algorithm in the correct order:",
    "items": [
      { "id": "1", "text": "Compare adjacent elements" },
      { "id": "2", "text": "Swap if elements are in wrong order" },
      { "id": "3", "text": "Repeat until array is sorted" },
      { "id": "4", "text": "Start with the first element" }
    ],
    "correctOrder": ["4", "1", "2", "3"],
    "icon": "ListChecks"
  },
  {
    "id": 5,
    "title": "Level 1: Algorithm Efficiency",
    "type": "multiple-choice",
    "question": "Which of the following best describes time complexity?",
    "options": [
      { "id": "a", "text": "Amount of memory used" },
      { "id": "b", "text": "Number of steps to complete an algorithm" },
      { "id": "c", "text": "The output size" },
      { "id": "d", "text": "The programming language used" }
    ],
    "correctAnswer": "b",
    "icon": "Code2"
  },
  {
    "id": 6,
    "title": "Level 1: Conditional Statements",
    "type": "true-false",
    "question": "If statements in algorithms help to make decisions based on conditions.",
    "correctAnswer": true,
    "icon": "SlidersHorizontal"
  },
  {
    "id": 7,
    "title": "Level 1: Loop Basics",
    "type": "fill-blanks",
    "question": "Fill in the blank to loop 5 times:",
    "codeTemplate": "for i = 1 to ____ do",
    "blanks": ["5"],
    "icon": "Terminal"
  },
  {
    "id": 8,
    "title": "Level 1: Searching Algorithm",
    "type": "drag-drop",
    "question": "Put the steps of linear search in the correct order:",
    "items": [
      { "id": "1", "text": "Move to the next element" },
      { "id": "2", "text": "Repeat until target is found or list ends" },
      { "id": "3", "text": "Start at the first element" },
      { "id": "4", "text": "Check if current element is the target" }
    ],
    "correctOrder": ["3", "4", "1", "2"],
    "icon": "ListChecks"
  },
  {
    "id": 9,
    "title": "Level 1: Algorithm Design",
    "type": "multiple-choice",
    "question": "Which of these is NOT a characteristic of a good algorithm?",
    "options": [
      { "id": "a", "text": "Finiteness" },
      { "id": "b", "text": "Definiteness" },
      { "id": "c", "text": "Randomness" },
      { "id": "d", "text": "Input and Output" }
    ],
    "correctAnswer": "c",
    "icon": "Code2"
  },
  {
    "id": 10,
    "title": "Level 1: Recursion",
    "type": "true-false",
    "question": "Recursion is when a function calls itself.",
    "correctAnswer": true,
    "icon": "SlidersHorizontal"
  },
  {
    "id": 11,
    "title": "Level 1: Algorithm Basics",
    "type": "fill-blanks",
    "question": "Complete the pseudocode to add two numbers:",
    "codeTemplate": "function add(a, b) {\n  return a ____ b;\n}",
    "blanks": ["+"],
    "icon": "Terminal"
  },
  {
    "id": 12,
    "title": "Level 1: Algorithm Steps",
    "type": "drag-drop",
    "question": "Order the steps to solve a problem using an algorithm:",
    "items": [
      { "id": "1", "text": "Test the algorithm" },
      { "id": "2", "text": "Understand the problem" },
      { "id": "3", "text": "Design the algorithm" },
      { "id": "4", "text": "Implement the algorithm" }
    ],
    "correctOrder": ["2", "3", "4", "1"],
    "icon": "ListChecks"
  },
  {
    "id": 13,
    "title": "Level 1: Sorting Algorithm",
    "type": "multiple-choice",
    "question": "Which sorting algorithm repeatedly swaps adjacent elements if they are in the wrong order?",
    "options": [
      { "id": "a", "text": "Quick Sort" },
      { "id": "b", "text": "Merge Sort" },
      { "id": "c", "text": "Bubble Sort" },
      { "id": "d", "text": "Binary Search" }
    ],
    "correctAnswer": "c",
    "icon": "Code2"
  },
  {
    "id": 14,
    "title": "Level 1: Algorithm Concepts",
    "type": "true-false",
    "question": "An algorithm can have multiple inputs but only one output.",
    "correctAnswer": false,
    "icon": "SlidersHorizontal"
  },
  {
    "id": 15,
    "title": "Level 1: Loop Basics",
    "type": "fill-blanks",
    "question": "Complete the pseudocode to print numbers from 1 to 5:",
    "codeTemplate": "\nfor i = 1 to 5 do\n  print(____)",
    "blanks": ["i"],
    "icon": "Terminal"
  },
  {
    "id": 16,
    "title": "Level 1: Searching Algorithm",
    "type": "drag-drop",
    "question": "Order the steps of binary search in a sorted array:",
    "items": [
      { "id": "1", "text": "Decide which half to search next" },
      { "id": "2", "text": "Compare middle element with target" },
      { "id": "3", "text": "Find middle element" },
      { "id": "4", "text": "Repeat until element is found or list is empty" }
    ],
    "correctOrder": ["3", "2", "1", "4"],
    "icon": "ListChecks"
  },
  {
    "id": 17,
    "title": "Level 1: Algorithm Efficiency",
    "type": "multiple-choice",
    "question": "Which of these is generally the fastest sorting algorithm on average?",
    "options": [
      { "id": "a", "text": "Bubble Sort" },
      { "id": "b", "text": "Insertion Sort" },
      { "id": "c", "text": "Quick Sort" },
      { "id": "d", "text": "Selection Sort" }
    ],
    "correctAnswer": "c",
    "icon": "Code2"
  },
  {
    "id": 18,
    "title": "Level 1: Algorithm Fundamentals",
    "type": "true-false",
    "question": "An algorithm must terminate after a finite number of steps.",
    "correctAnswer": true,
    "icon": "SlidersHorizontal"
  },
  {
    "id": 19,
    "title": "Level 1: Function Basics",
    "type": "fill-blanks",
    "question": "Complete the function to check if a number is even:",
    "codeTemplate": "\nfunction isEven(num) {\n  return num % 2 ____ 0;\n}",
    "blanks": ["=="],
    "icon": "Terminal"
  },
  {
    "id": 20,
    "title": "Level 1: Algorithm Steps",
    "type": "drag-drop",
    "question": "Arrange the steps of the selection sort algorithm:",
    "items": [
      { "id": "1", "text": "Find the minimum element" },
      { "id": "2", "text": "Repeat until the array is sorted" },
      { "id": "3", "text": "Move to the next element" },
      { "id": "4", "text": "Swap it with the first unsorted element" }
    ],
    "correctOrder": ["1", "4", "3", "2"],
    "icon": "ListChecks"
  }
]

{
  "category": "big_o",
  "level": "beginner",
  "topics": [
    {
      "title": "What Is Big O Notation?",
      "tutorial": "Big O notation describes how an algorithm's runtime or space requirements grow as input size increases, focusing on the dominant term.",
      "questions": [
        {
          "id": "beg-o-q1",
          "type": "multiple-choice",
          "question": "Big O notation describes behavior as n approaches ___.",
          "options": [
            "0",
            "\u221e",
            "1",
            "n!"
          ],
          "correctAnswer": "\u221e",
          "icon": "Infinity"
        },
        {
          "id": "beg-o-q2",
          "type": "true-false",
          "question": "Big O ignores constant factors and lower-order terms.",
          "correctAnswer": true,
          "icon": "Shuffle"
        },
        {
          "id": "beg-o-q3",
          "type": "fill-blanks",
          "question": "Big O focuses on the ____ term of a function.",
          "codeTemplate": "",
          "blanks": [
            "highest-order"
          ],
          "icon": "SortAscending"
        },
        {
          "id": "beg-o-q4",
          "type": "multiple-choice",
          "question": "O(n + log n) simplifies to:",
          "options": [
            "O(n)",
            "O(log n)",
            "O(n log n)",
            "O(1)"
          ],
          "correctAnswer": "O(n)",
          "icon": "Calculator"
        },
        {
          "id": "beg-o-q5",
          "type": "true-false",
          "question": "O(3n + 2) is O(n).",
          "correctAnswer": true,
          "icon": "Check"
        },
        {
          "id": "beg-o-q6",
          "type": "drag-drop",
          "question": "Match growth to Big O:",
          "items": [
            {
              "id": "A",
              "text": "5"
            },
            {
              "id": "B",
              "text": "n"
            },
            {
              "id": "C",
              "text": "n\u00b2"
            }
          ],
          "correctOrder": [
            "A\u2192O(1)",
            "B\u2192O(n)",
            "C\u2192O(n\u00b2)"
          ],
          "icon": "Scale"
        }
      ]
    },
    {
      "title": "Constant Time \u2013 O(1)",
      "tutorial": "O(1) operations take constant time regardless of input size, such as accessing an array element by index.",
      "questions": [
        {
          "id": "beg-o1-q1",
          "type": "multiple-choice",
          "question": "Which is O(1)?",
          "options": [
            "Loop",
            "Hash lookup (average)",
            "Nested loops",
            "Array index access"
          ],
          "correctAnswer": "Array index access",
          "icon": "Array"
        },
        {
          "id": "beg-o1-q2",
          "type": "true-false",
          "question": "Accessing the first element of a list is O(1).",
          "correctAnswer": true,
          "icon": "List"
        },
        {
          "id": "beg-o1-q3",
          "type": "fill-blanks",
          "question": "Looking up a key in a hash table is O(___) on average.",
          "codeTemplate": "",
          "blanks": [
            "1"
          ],
          "icon": "Hash"
        },
        {
          "id": "beg-o1-q4",
          "type": "multiple-choice",
          "question": "Which arithmetic operation is O(1)?",
          "options": [
            "Addition",
            "Matrix multiplication",
            "Sorting",
            "Graph traversal"
          ],
          "correctAnswer": "Addition",
          "icon": "Plus"
        },
        {
          "id": "beg-o1-q5",
          "type": "true-false",
          "question": "Checking a variable's value is O(1).",
          "correctAnswer": true,
          "icon": "Search"
        },
        {
          "id": "beg-o1-q6",
          "type": "drag-drop",
          "question": "Order these O(1) actions:",
          "items": [
            {
              "id": "1",
              "text": "Access index"
            },
            {
              "id": "2",
              "text": "Simple addition"
            },
            {
              "id": "3",
              "text": "Hash compute"
            }
          ],
          "correctOrder": [
            "1",
            "2",
            "3"
          ],
          "icon": "Numbers"
        }
      ]
    },
    {
      "title": "Linear Time \u2013 O(n)",
      "tutorial": "O(n) algorithms scale linearly with input size, such as single loops over data.",
      "questions": [
        {
          "id": "beg-on-q1",
          "type": "multiple-choice",
          "question": "Summing n elements is O(___).",
          "options": [
            "n",
            "n\u00b2",
            "1",
            "log n"
          ],
          "correctAnswer": "n",
          "icon": "Sum"
        },
        {
          "id": "beg-on-q2",
          "type": "true-false",
          "question": "A single for-loop over n items is O(n).",
          "correctAnswer": true,
          "icon": "Loop"
        },
        {
          "id": "beg-on-q3",
          "type": "fill-blanks",
          "question": "Filtering a list of size n is O(___).",
          "codeTemplate": "",
          "blanks": [
            "n"
          ],
          "icon": "Filter"
        },
        {
          "id": "beg-on-q4",
          "type": "multiple-choice",
          "question": "Which is not O(n)?",
          "options": [
            "Linear search",
            "Single loop",
            "Nested loops",
            "Summation"
          ],
          "correctAnswer": "Nested loops",
          "icon": "X"
        },
        {
          "id": "beg-on-q5",
          "type": "true-false",
          "question": "Traversing a linked list is O(n).",
          "correctAnswer": true,
          "icon": "LinkedList"
        },
        {
          "id": "beg-on-q6",
          "type": "drag-drop",
          "question": "Match tasks to O(n):",
          "items": [
            {
              "id": "A",
              "text": "Search"
            },
            {
              "id": "B",
              "text": "Sort"
            }
          ],
          "correctOrder": [
            "A",
            "B"
          ],
          "icon": "Tasks"
        }
      ]
    },
    {
      "title": "Quadratic Time \u2013 O(n\u00b2)",
      "tutorial": "O(n\u00b2) algorithms often involve nested loops, like Bubble Sort.",
      "questions": [
        {
          "id": "beg-on2-q1",
          "type": "multiple-choice",
          "question": "O(n\u00b2) arises from how many nested loops?",
          "options": [
            "1",
            "2",
            "3",
            "0"
          ],
          "correctAnswer": "2",
          "icon": "Layers"
        },
        {
          "id": "beg-on2-q2",
          "type": "true-false",
          "question": "Bubble Sort worst-case is O(n\u00b2).",
          "correctAnswer": true,
          "icon": "Check"
        },
        {
          "id": "beg-on2-q3",
          "type": "fill-blanks",
          "question": "Two nested loops over n items yield O(___).",
          "codeTemplate": "",
          "blanks": [
            "n\u00b2"
          ],
          "icon": "Loop"
        },
        {
          "id": "beg-on2-q4",
          "type": "multiple-choice",
          "question": "Selection sort is O(n\u00b2). True or false?",
          "options": [
            "True",
            "False"
          ],
          "correctAnswer": "True",
          "icon": "Select"
        },
        {
          "id": "beg-on2-q5",
          "type": "true-false",
          "question": "Comparing all pairs in an array is O(n\u00b2).",
          "correctAnswer": true,
          "icon": "Calculator"
        },
        {
          "id": "beg-on2-q6",
          "type": "drag-drop",
          "question": "Match loops to complexity:",
          "items": [
            {
              "id": "1",
              "text": "1 loop"
            },
            {
              "id": "2",
              "text": "2 loops"
            }
          ],
          "correctOrder": [
            "1\u2192O(n)",
            "2\u2192O(n\u00b2)"
          ],
          "icon": "SortNumeric"
        }
      ]
    },
    {
      "title": "Best, Average, Worst Cases",
      "tutorial": "Big O denotes worst-case. \u03a9 denotes best-case, \u0398 average-case.",
      "questions": [
        {
          "id": "beg-cases-q1",
          "type": "multiple-choice",
          "question": "Big O typically describes which case?",
          "options": [
            "Best",
            "Average",
            "Worst",
            "None"
          ],
          "correctAnswer": "Worst",
          "icon": "Clock"
        },
        {
          "id": "beg-cases-q2",
          "type": "true-false",
          "question": "Quick Sort best-case is O(n log n).",
          "correctAnswer": true,
          "icon": "TrendingUp"
        },
        {
          "id": "beg-cases-q3",
          "type": "fill-blanks",
          "question": "\u03a9(n) describes the ____ case.",
          "codeTemplate": "",
          "blanks": [
            "best"
          ],
          "icon": "Infinity"
        },
        {
          "id": "beg-cases-q4",
          "type": "multiple-choice",
          "question": "\u0398(n) denotes which case?",
          "options": [
            "Best",
            "Average",
            "Worst",
            "All"
          ],
          "correctAnswer": "Average",
          "icon": "Equalizer"
        },
        {
          "id": "beg-cases-q5",
          "type": "true-false",
          "question": "Worst-case for hash lookup is O(n).",
          "correctAnswer": true,
          "icon": "Hash"
        },
        {
          "id": "beg-cases-q6",
          "type": "drag-drop",
          "question": "Match notation to case:",
          "items": [
            {
              "id": "O",
              "text": "O"
            },
            {
              "id": "\u03a9",
              "text": "\u03a9"
            },
            {
              "id": "\u0398",
              "text": "\u0398"
            }
          ],
          "correctOrder": [
            "O\u2192Worst",
            "\u03a9\u2192Best",
            "\u0398\u2192Average"
          ],
          "icon": "ChartPie"
        }
      ]
    },
    {
      "title": "Simplifying Big O Expressions",
      "tutorial": "Drop constants and lower-order terms to simplify expressions.",
      "questions": [
        {
          "id": "beg-simp-q1",
          "type": "multiple-choice",
          "question": "3n\u00b2+5n+20 simplifies to O(___).",
          "options": [
            "n",
            "n\u00b2",
            "n\u00b3",
            "1"
          ],
          "correctAnswer": "n\u00b2",
          "icon": "SortDescending"
        },
        {
          "id": "beg-simp-q2",
          "type": "true-false",
          "question": "n log n + n is O(n log n).",
          "correctAnswer": true,
          "icon": "Merge"
        },
        {
          "id": "beg-simp-q3",
          "type": "fill-blanks",
          "question": "4n+100 is O(___).",
          "codeTemplate": "",
          "blanks": [
            "n"
          ],
          "icon": "Calculator"
        },
        {
          "id": "beg-simp-q4",
          "type": "multiple-choice",
          "question": "2n+n\u00b2 simplifies to O(___).",
          "options": [
            "n",
            "n\u00b2",
            "n\u00b3",
            "log n"
          ],
          "correctAnswer": "n\u00b2",
          "icon": "Math"
        },
        {
          "id": "beg-simp-q5",
          "type": "true-false",
          "question": "Constants are ignored in Big O.",
          "correctAnswer": true,
          "icon": "Shuffle"
        },
        {
          "id": "beg-simp-q6",
          "type": "drag-drop",
          "question": "Match expression to simplified:",
          "items": [
            {
              "id": "A",
              "text": "5n"
            },
            {
              "id": "B",
              "text": "n\u00b2+2n"
            }
          ],
          "correctOrder": [
            "A\u2192O(n)",
            "B\u2192O(n\u00b2)"
          ],
          "icon": "Equal"
        }
      ]
    }
  ]
}